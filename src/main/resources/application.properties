spring.application.name=jobportal

# Local
# spring.datasource.url=jdbc:postgresql:jobportal
# AWS
spring.datasource.url=jdbc:postgresql://jobportal-db2-instance-1.c7o0o44yqfd4.ap-south-1.rds.amazonaws.com:5432/

! Not for production
spring.datasource.username=postgres
! Not for production
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# TODO: For auto create/update schema - Not for production
spring.jpa.hibernate.ddl-auto=update

server.port=8081

# TODO: Google OAuth Configuration (!Use Environment Variables in Production)
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:5173/oauthlogon

#spring.security.oauth2.client.registration.google.redirect-uri-template="{baseUrl}/login/oauth2/code/google"

spring.security.oauth2.client.registration.google.client-scope=openid,profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub
